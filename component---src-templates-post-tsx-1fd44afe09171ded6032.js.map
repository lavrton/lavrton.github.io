{"version":3,"sources":["webpack:///./src/components/PostFullFooter.tsx","webpack:///./src/components/icons/infinity.tsx","webpack:///./src/components/ReadNextCard.tsx","webpack:///./src/components/subsribe/Subscribe.tsx","webpack:///./src/templates/post.tsx","webpack:///./src/components/PostContent.tsx"],"names":["PostFullFoot","styled","target","PostFullFooter","props","react","children","InfinityIcon","xmlns","viewBox","d","ReadNextCardStyles","colors","darkgrey","coverImage","ReadNextCardHeader","ReadNextCardHeaderSitetitle","ReadNextCardHeaderTitle","ReadNextDivider","ReadNextCardContent","ReadNextCardFooter","ReadNextCard","gatsby_browser_entry","query","render","_ref","header","childImageSharp","fluid","src","config","title","to","_","tags","infinity","relatedPosts","edges","map","n","key","node","frontmatter","fields","slug","totalCount","data","_1676377518","SubscribeFormSection","lighten","whitegrey","midgrey","SubscribeFormTitle","css","Subscribe","className","SubscribeForm","PostTemplate","PostFull","NoImage","PostFullHeader","PostFullMeta","PostFullMetaDate","blue","PostFullTitle","setLightness","PostFullImage","lightgrey","DateDivider","ReadNextFeed","disqusConfig","PageTemplate","post","markdownRemark","width","height","image","sizes","split","String","Number","aspectRatio","layouts","Helmet","property","content","excerpt","siteUrl","pathContext","date","facebook","name","author","id","twitter","Wrapper","SiteHeader","outer","inner","SiteNav","SiteMain","dateTime","userDate","length","gatsby_image_default","a","style","PostContent","htmlAst","showSubscribe","subsribe_Subscribe","components_PostFullFooter","lib","shortname","components_ReadNextCard","pageContext","prev","PostCard","next","Footer","PostFullContent","darken","setSaturation","renderAst","rehypeReact","createElement","React","components","Compiler","Ast","ast","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0___default","properties","_ref2","react__WEBPACK_IMPORTED_MODULE_2__"],"mappings":"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","file":"component---src-templates-post-tsx-1fd44afe09171ded6032.js","sourcesContent":["import * as React from 'react';\nimport styled from 'react-emotion';\n\nconst PostFullFoot = styled.footer`\n  margin: 0 auto;\n  padding: 3vw 0 6vw 0;\n  max-width: 840px;\n`;\n\nconst PostFullFooter: React.SFC = props => <PostFullFoot>{props.children}</PostFullFoot>;\n\nexport default PostFullFooter;\n","// tslint:disable:no-http-string\nimport * as React from 'react';\n\nconst InfinityIcon: React.SFC = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n    <path d=\"M13 14.5s2 3 5 3 5.5-2.463 5.5-5.5S21 6.5 18 6.5c-5 0-7 11-12 11C2.962 17.5.5 15.037.5 12S3 6.5 6 6.5s4.5 3.5 4.5 3.5\" />\n  </svg>\n);\nexport default InfinityIcon;\n","import { Link, StaticQuery, graphql } from 'gatsby';\nimport * as React from 'react';\nimport styled from 'react-emotion';\nimport * as _ from 'lodash';\n\nimport { colors } from '../styles/colors';\nimport InfinityIcon from './icons/infinity';\nimport config from '../website-config';\n\nexport interface ReadNextCardStylesProps {\n  coverImage: string;\n}\n\nconst ReadNextCardStyles = styled.article<ReadNextCardStylesProps>(\n  props => `\n  position: relative;\n  flex: 1 1 300px;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  margin: 0 20px 40px;\n  padding: 25px;\n  color: #fff;\n  background: ${colors.darkgrey} center center;\n  background-size: cover;\n  border-radius: 5px;\n  box-shadow: rgba(39, 44, 49, 0.06) 8px 14px 38px, rgba(39, 44, 49, 0.03) 1px 3px 8px;\n  background-image: url(\"${props.coverImage}\");\n\n  :before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    display: block;\n    background: linear-gradient(135deg, rgba(0,40,60,0.8) 0%,rgba(0,20,40,0.7) 100%);\n    border-radius: 5px;\n    backdrop-filter: blur(2px);\n  }\n`,\n);\n\nconst ReadNextCardHeader = styled.header`\n  position: relative;\n  z-index: 50;\n  padding-top: 20px;\n  text-align: center;\n`;\n\nconst ReadNextCardHeaderSitetitle = styled.small`\n  display: block;\n  font-size: 1.3rem;\n  line-height: 1.3em;\n  opacity: 0.8;\n`;\n\nconst ReadNextCardHeaderTitle = styled.h3`\n  margin: 0;\n  padding: 0 20px;\n  color: #fff;\n  font-size: 3rem;\n  line-height: 1.2em;\n  letter-spacing: 1px;\n\n  a {\n    color: #fff;\n    font-weight: 300;\n    text-decoration: none;\n  }\n\n  a:hover {\n    text-decoration: none;\n  }\n`;\n\nconst ReadNextDivider = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  height: 80px;\n\n  svg {\n    width: 40px;\n    fill: transparent;\n    stroke: #fff;\n\n    stroke-width: 0.5px;\n    stroke-opacity: 0.65;\n  }\n`;\n\nconst ReadNextCardContent = styled.div`\n  position: relative;\n  z-index: 50;\n  flex-grow: 1;\n  display: flex;\n  font-size: 1.7rem;\n\n  ul {\n    display: flex;\n    flex-direction: column;\n    margin: 0 auto;\n    padding: 0;\n    text-align: center;\n    list-style: none;\n  }\n\n  li {\n    margin: 0;\n    padding: 0;\n    font-size: 1.6rem;\n    line-height: 1.25em;\n    font-weight: 200;\n    letter-spacing: -0.5px;\n  }\n\n  li a {\n    display: block;\n    padding: 20px 0;\n    border-bottom: rgba(255, 255, 255, 0.3) 1px solid;\n    color: #fff;\n    font-weight: 500;\n    vertical-align: top;\n    transition: opacity 0.3s ease;\n  }\n\n  li:first-of-type a {\n    padding-top: 10px;\n  }\n\n  li a:hover {\n    opacity: 1;\n  }\n`;\n\nconst ReadNextCardFooter = styled.footer`\n  position: relative;\n  margin: 15px 0 3px 0;\n  text-align: center;\n\n  a {\n    color: #fff;\n  }\n`;\n\nexport interface ReadNextProps {\n  tags: string[];\n  relatedPosts: {\n    totalCount: number;\n    edges: {\n      node: {\n        timeToRead: number;\n        frontmatter: {\n          title: string;\n        };\n        fields: {\n          slug: string;\n        };\n      };\n    }[];\n  };\n}\n\nexport interface ReadNextQuery {\n  header: {\n    childImageSharp: {\n      fluid: any;\n    };\n  };\n}\n\nconst ReadNextCard: React.SFC<ReadNextProps> = props => {\n  return (\n    <StaticQuery\n      query={graphql`\n        query ReadNextQuery {\n          header: file(relativePath: { eq: \"img/blog-cover.jpg\" }) {\n            childImageSharp {\n              # Specify the image processing specifications right in the query.\n              # Makes it trivial to update as your page's design changes.\n              fluid(maxWidth: 2000) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      `}\n      // tslint:disable-next-line:react-this-binding-issue\n      render={({ header }: ReadNextQuery) => (\n        <ReadNextCardStyles coverImage={header.childImageSharp.fluid.src}>\n          <ReadNextCardHeader>\n            <ReadNextCardHeaderSitetitle>\n              &mdash; {config.title} &mdash;\n            </ReadNextCardHeaderSitetitle>\n            <ReadNextCardHeaderTitle>\n              <Link to={`/tags/${_.kebabCase(props.tags[0])}/`}>{props.tags[0]}</Link>\n            </ReadNextCardHeaderTitle>\n          </ReadNextCardHeader>\n          <ReadNextDivider>\n            <InfinityIcon />\n          </ReadNextDivider>\n          <ReadNextCardContent>\n            <ul>\n              {props.relatedPosts.edges.map(n => {\n                return (\n                  <li key={n.node.frontmatter.title}>\n                    <Link to={n.node.fields.slug}>{n.node.frontmatter.title}</Link>\n                  </li>\n                );\n              })}\n            </ul>\n          </ReadNextCardContent>\n          <ReadNextCardFooter>\n            <Link to={`/tags/${_.kebabCase(props.tags[0])}/`}>\n              {props.relatedPosts.totalCount > 1 &&\n                `See all ${props.relatedPosts.totalCount} posts`}\n              {props.relatedPosts.totalCount === 1 && `1 post`}\n              {props.relatedPosts.totalCount === 0 && `No posts`} →\n            </Link>\n          </ReadNextCardFooter>\n        </ReadNextCardStyles>\n      )}\n    />\n  );\n};\n\nexport default ReadNextCard;\n","import { lighten } from 'polished';\nimport * as React from 'react';\nimport { css, default as styled } from 'react-emotion';\n\nimport { colors } from '../../styles/colors';\nimport SubscribeForm from './SubscribeForm';\n\n\nconst SubscribeFormSection = styled.section`\n  margin: 1.5em 0;\n  padding: 6.5vw 7vw 7vw;\n  /* border: color(var(--whitegrey) l(+2%)) 1px solid; */\n  border: ${lighten('0.02', colors.whitegrey)} 1px solid;\n  text-align: center;\n  /* background: color(var(--whitegrey) l(+4%)); */\n  background: ${lighten('0.04', colors.whitegrey)};\n  border-radius: 7px;\n\n  p {\n    margin-bottom: 1em;\n    color: ${colors.midgrey};\n    font-size: 2.2rem;\n    line-height: 1.55em;\n    letter-spacing: 0.2px;\n  }\n\n  form {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: 0 auto;\n    max-width: 420px;\n  }\n\n  .form-group {\n    flex-grow: 1;\n  }\n  @media (max-width: 650px) {\n    p {\n      font-size: 1.6rem;\n    }\n  }\n`;\n\nconst SubscribeFormTitle = css`\n  margin: 0 0 3px 0;\n  padding: 0;\n  color: ${colors.darkgrey};\n  font-size: 3.5rem;\n  line-height: 1;\n  font-weight: 700;\n  @media (max-width: 650px) {\n    font-size: 2.4rem;\n  }\n`;\n\nexport interface SubscribeProps {\n  title: string;\n}\n\nconst Subscribe: React.SFC<SubscribeProps> = props => {\n  return (\n    <SubscribeFormSection>\n      <h3 className={`${SubscribeFormTitle}`}>Subscribe to {props.title}</h3>\n      <p>Get the latest posts delivered right to your inbox</p>\n      <SubscribeForm />\n    </SubscribeFormSection>\n  );\n};\n\nexport default Subscribe;\n","import { graphql, Link } from 'gatsby';\nimport Img from 'gatsby-image';\nimport * as _ from 'lodash';\nimport { setLightness } from 'polished';\nimport * as React from 'react';\nimport styled, { css } from 'react-emotion';\nimport { Helmet } from 'react-helmet';\n\nimport AuthorCard from '../components/AuthorCard';\nimport Footer from '../components/Footer';\nimport SiteNav from '../components/header/SiteNav';\nimport PostCard from '../components/PostCard';\nimport PostContent from '../components/PostContent';\nimport PostFullFooter from '../components/PostFullFooter';\nimport PostFullFooterRight from '../components/PostFullFooterRight';\nimport ReadNextCard from '../components/ReadNextCard';\nimport Subscribe from '../components/subsribe/Subscribe';\nimport Wrapper from '../components/Wrapper';\nimport IndexLayout from '../layouts';\nimport { colors } from '../styles/colors';\nimport { inner, outer, SiteHeader, SiteMain } from '../styles/shared';\nimport config from '../website-config';\n\nimport { DiscussionEmbed } from 'disqus-react';\n\nconst PostTemplate = css`\n  .site-main {\n    background #fff;\n    padding-bottom: 4vw;\n  }\n`;\n\nexport const PostFull = css`\n  position: relative;\n  z-index: 50;\n`;\n\nexport const NoImage = css`\n  .post-full-content {\n    padding-top: 0;\n  }\n\n  .post-full-content:before,\n  .post-full-content:after {\n    display: none;\n  }\n`;\n\nexport const PostFullHeader = styled.header`\n  margin: 0 auto;\n  padding: 6vw 3vw 3vw;\n  max-width: 1040px;\n  text-align: center;\n\n  @media (max-width: 500px) {\n    padding: 14vw 3vw 10vw;\n  }\n`;\n\nconst PostFullMeta = styled.section`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: ${colors.midgrey};\n  font-size: 1.4rem;\n  font-weight: 600;\n  text-transform: uppercase;\n\n  @media (max-width: 500px) {\n    font-size: 1.2rem;\n    line-height: 1.3em;\n  }\n`;\n\nconst PostFullMetaDate = styled.time`\n  color: ${colors.blue};\n`;\n\nexport const PostFullTitle = styled.h1`\n  margin: 0;\n  color: ${setLightness('0.05', colors.darkgrey)};\n  @media (max-width: 500px) {\n    font-size: 2.9rem;\n  }\n`;\n\nconst PostFullImage = styled.figure`\n  margin: 0 -10vw -165px;\n  height: 800px;\n  background: ${colors.lightgrey} center center;\n  background-size: cover;\n  border-radius: 5px;\n\n  @media (max-width: 1170px) {\n    margin: 0 -4vw -100px;\n    height: 600px;\n    border-radius: 0;\n  }\n\n  @media (max-width: 800px) {\n    height: 400px;\n  }\n  @media (max-width: 500px) {\n    margin-bottom: 4vw;\n    height: 350px;\n  }\n`;\n\nconst DateDivider = styled.span`\n  display: inline-block;\n  margin: 0 6px 1px;\n`;\n\nconst ReadNextFeed = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0 -20px;\n  padding: 40px 0 0 0;\n`;\n\ninterface PageTemplateProps {\n  pathContext: {\n    slug: string;\n  };\n  data: {\n    logo: {\n      childImageSharp: {\n        fixed: any;\n      };\n    };\n    markdownRemark: {\n      html: string;\n      htmlAst: any;\n      excerpt: string;\n      timeToRead: string;\n      frontmatter: {\n        title: string;\n        date: string;\n        userDate: string;\n        image: {\n          childImageSharp: {\n            fluid: any;\n          };\n        };\n        tags: string[];\n        author: {\n          id: string;\n          bio: string;\n          avatar: {\n            children: {\n              fixed: {\n                src: string;\n              };\n            }[];\n          };\n        };\n      };\n    };\n    relatedPosts: {\n      totalCount: number;\n      edges: {\n        node: {\n          timeToRead: number;\n          frontmatter: {\n            title: string;\n          };\n          fields: {\n            slug: string;\n          };\n        };\n      }[];\n    };\n  };\n  pageContext: {\n    prev: PageContext;\n    next: PageContext;\n  };\n}\n\nexport interface PageContext {\n  excerpt: string;\n  timeToRead: number;\n  fields: {\n    slug: string;\n  };\n  frontmatter: {\n    image: {\n      childImageSharp: {\n        fluid: any;\n      };\n    };\n    title: string;\n    date: string;\n    tags: string[];\n    author: {\n      id: string;\n      bio: string;\n      avatar: {\n        children: {\n          fixed: {\n            src: string;\n          };\n        }[];\n      };\n    };\n  };\n}\n\nconst disqusShortname = 'lavrton-com';\nconst disqusConfig = {\n  // url: this.props.article.url,\n  // identifier: this.props.article.id,\n  // title: this.props.article.title,\n};\n\nconst PageTemplate: React.SFC<PageTemplateProps> = props => {\n  const post = props.data.markdownRemark;\n  let width = '';\n  let height = '';\n  if (post.frontmatter.image) {\n    width = post.frontmatter.image.childImageSharp.fluid.sizes.split(', ')[1].split('px')[0];\n    height = String(Number(width) / post.frontmatter.image.childImageSharp.fluid.aspectRatio);\n  }\n\n  return (\n    <IndexLayout className=\"post-template\">\n      <Helmet>\n        <title>{post.frontmatter.title}</title>\n\n        <meta property=\"og:site_name\" content={config.title} />\n        <meta property=\"og:type\" content=\"article\" />\n        <meta property=\"og:title\" content={post.frontmatter.title} />\n        <meta property=\"og:description\" content={post.excerpt} />\n        <meta property=\"og:url\" content={config.siteUrl + props.pathContext.slug} />\n        {post.frontmatter.image && (\n          <meta property=\"og:image\" content={post.frontmatter.image.childImageSharp.fluid.src} />\n        )}\n        <meta property=\"article:published_time\" content={post.frontmatter.date} />\n        {/* not sure if modified time possible */}\n        {/* <meta property=\"article:modified_time\" content=\"2018-08-20T15:12:00.000Z\" /> */}\n        {post.frontmatter.tags && (\n          <meta property=\"article:tag\" content={post.frontmatter.tags[0]} />\n        )}\n\n        <meta property=\"article:publisher\" content={config.facebook} />\n        <meta property=\"article:author\" content={config.facebook} />\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:title\" content={post.frontmatter.title} />\n        <meta name=\"twitter:description\" content={post.excerpt} />\n        <meta name=\"twitter:url\" content={config.siteUrl + props.pathContext.slug} />\n        {post.frontmatter.image && (\n          <meta name=\"twitter:image\" content={post.frontmatter.image.childImageSharp.fluid.src} />\n        )}\n        <meta name=\"twitter:label1\" content=\"Written by\" />\n        <meta name=\"twitter:data1\" content={post.frontmatter.author.id} />\n        <meta name=\"twitter:label2\" content=\"Filed under\" />\n        {post.frontmatter.tags && <meta name=\"twitter:data2\" content={post.frontmatter.tags[0]} />}\n        <meta name=\"twitter:site\" content={`@${config.twitter.split('https://twitter.com/')[0]}`} />\n        <meta\n          name=\"twitter:creator\"\n          content={`@${config.twitter.split('https://twitter.com/')[0]}`}\n        />\n        {width && <meta property=\"og:image:width\" content={width} />}\n        {height && <meta property=\"og:image:height\" content={height} />}\n      </Helmet>\n      <Wrapper className={`${PostTemplate}`}>\n        <header className={`${SiteHeader} ${outer}`}>\n          <div className={`${inner}`}>\n            <SiteNav />\n          </div>\n        </header>\n        <main id=\"site-main\" className={`site-main ${SiteMain} ${outer}`}>\n          <div className={`${inner}`}>\n            {/* TODO: no-image css tag? */}\n            <article className={`${PostFull} ${!post.frontmatter.image ? NoImage : ''}`}>\n              <PostFullHeader>\n                <PostFullMeta>\n                  <PostFullMetaDate dateTime={post.frontmatter.date}>\n                    {post.frontmatter.userDate}\n                  </PostFullMetaDate>\n                  {post.frontmatter.tags && post.frontmatter.tags.length > 0 && (\n                    <>\n                      <DateDivider>/</DateDivider>\n                      <Link to={`/tags/${_.kebabCase(post.frontmatter.tags[0])}/`}>\n                        {post.frontmatter.tags[0]}\n                      </Link>\n                    </>\n                  )}\n                </PostFullMeta>\n                <PostFullTitle>{post.frontmatter.title}</PostFullTitle>\n              </PostFullHeader>\n\n              {post.frontmatter.image && (\n                <PostFullImage>\n                  <Img\n                    style={{ height: '100%' }}\n                    fluid={post.frontmatter.image.childImageSharp.fluid}\n                  />\n                </PostFullImage>\n              )}\n              <PostContent htmlAst={post.htmlAst} />\n\n              {/* The big email subscribe modal content */}\n              {config.showSubscribe && <Subscribe title={config.title} />}\n\n              <PostFullFooter>\n                {/* <AuthorCard author={post.frontmatter.author} /> */}\n                {/* <PostFullFooterRight authorId={post.frontmatter.author.id} /> */}\n                <DiscussionEmbed shortname={disqusShortname} config={disqusConfig} />\n              </PostFullFooter>\n            </article>\n          </div>\n        </main>\n\n        {/* Links to Previous/Next posts */}\n        <aside className={`read-next ${outer}`}>\n          <div className={`${inner}`}>\n            <ReadNextFeed>\n              {props.data.relatedPosts && (\n                <ReadNextCard tags={post.frontmatter.tags} relatedPosts={props.data.relatedPosts} />\n              )}\n\n              {props.pageContext.prev && <PostCard post={props.pageContext.prev} />}\n              {props.pageContext.next && <PostCard post={props.pageContext.next} />}\n            </ReadNextFeed>\n          </div>\n        </aside>\n        <Footer />\n      </Wrapper>\n    </IndexLayout>\n  );\n};\n\nexport default PageTemplate;\n\nexport const query = graphql`\n  query($slug: String, $primaryTag: String) {\n    logo: file(relativePath: { eq: \"img/glogo.png\" }) {\n      childImageSharp {\n        fixed {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      htmlAst\n      excerpt\n      timeToRead\n      frontmatter {\n        title\n        userDate: date(formatString: \"D MMMM YYYY\")\n        date\n        tags\n        image {\n          childImageSharp {\n            fluid(maxWidth: 3720) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        author {\n          id\n          bio\n          avatar {\n            children {\n              ... on ImageSharp {\n                fixed(quality: 100) {\n                  ...GatsbyImageSharpFixed\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    relatedPosts: allMarkdownRemark(\n      filter: { frontmatter: { tags: { in: [$primaryTag] }, draft: { ne: true } } }\n      limit: 3\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          timeToRead\n          excerpt\n          frontmatter {\n            title\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n","import { lighten, setLightness, darken, setSaturation } from 'polished';\nimport * as React from 'react';\nimport styled from 'react-emotion';\nimport rehypeReact from 'rehype-react';\n\nimport { colors } from '../styles/colors';\n\nexport const PostFullContent = styled.section`\n  position: relative;\n  margin: 0 auto;\n  padding: 70px 100px 0;\n  min-height: 230px;\n  font-family: Georgia, serif;\n  font-size: 2.2rem;\n  line-height: 1.6em;\n  background: #fff;\n\n  @media (max-width: 1170px) {\n    padding: 5vw 7vw 0;\n  }\n  @media (max-width: 800px) {\n    font-size: 1.9rem;\n  }\n\n  :before {\n    content: '';\n    position: absolute;\n    top: 15px;\n    left: -5px;\n    z-index: -1;\n    display: block;\n    width: 20px;\n    height: 200px;\n    background: rgba(39, 44, 49, 0.15);\n    filter: blur(5px);\n    transform: rotate(-5deg);\n  }\n\n  :after {\n    content: '';\n    position: absolute;\n    top: 15px;\n    right: -5px;\n    z-index: -1;\n    display: block;\n    width: 20px;\n    height: 200px;\n    background: rgba(39, 44, 49, 0.15);\n    filter: blur(5px);\n    transform: rotate(5deg);\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6,\n  p,\n  ul,\n  ol,\n  dl,\n  pre,\n  blockquote,\n  .post-full-comments,\n  .footnotes {\n    min-width: 100%;\n  }\n\n  li {\n    word-break: break-word;\n  }\n\n  li p {\n    margin: 0;\n  }\n\n  a {\n    color: #000;\n    word-break: break-word;\n    box-shadow: ${colors.blue} 0 -1px 0 inset;\n  }\n\n  a:hover {\n    color: ${colors.blue};\n    text-decoration: none;\n  }\n\n  strong,\n  em {\n    /* color: color(var(--darkgrey) l(-5%)); */\n    color: ${darken('0.05', colors.darkgrey)};\n  }\n\n  small {\n    display: inline-block;\n    line-height: 1.6em;\n  }\n\n  li:first-child {\n    margin-top: 0;\n  }\n\n  img,\n  video {\n    display: block;\n    margin: 1.5em auto;\n    max-width: 1040px;\n    height: auto;\n  }\n  @media (max-width: 1040px) {\n    img,\n    video {\n      width: 100%;\n    }\n  }\n\n  img[src$='#full'] {\n    max-width: none;\n    width: 100vw;\n  }\n\n  img + br + small {\n    display: block;\n    margin-top: -3em;\n    margin-bottom: 1.5em;\n    text-align: center;\n  }\n\n  /* Override third party iframe styles */\n  iframe {\n    margin: 0 auto !important;\n  }\n\n  blockquote {\n    margin: 0 0 1.5em;\n    padding: 0 1.5em;\n    border-left: #3eb0ef 3px solid;\n  }\n\n  blockquote p {\n    margin: 0 0 1em 0;\n    color: inherit;\n    font-size: inherit;\n    line-height: inherit;\n    font-style: italic;\n  }\n\n  blockquote p:last-child {\n    margin-bottom: 0;\n  }\n\n  code {\n    padding: 0 5px 2px;\n    font-size: 0.8em;\n    line-height: 1em;\n    font-weight: 400 !important;\n    background: ${colors.whitegrey};\n    border-radius: 3px;\n  }\n\n  p code {\n    word-break: break-all;\n  }\n\n  pre {\n    overflow-x: auto;\n    /* margin: 1.5em 0 3em; */\n    padding: 20px;\n    max-width: 100%;\n    /* border: color(var(--darkgrey) l(-10%)) 1px solid; */\n    border: ${darken('0.01', colors.darkgrey)} 1px solid;\n    color: ${colors.whitegrey};\n    font-size: 1.4rem;\n    line-height: 1.5em;\n    /* background: color(var(--darkgrey) l(-3%)); */\n    background: ${darken('0.03', colors.darkgrey)};\n    border-radius: 5px;\n  }\n\n  pre code {\n    padding: 0;\n    font-size: inherit;\n    line-height: inherit;\n    background: transparent;\n  }\n\n  pre code :not(span) {\n    color: inherit;\n  }\n\n  /* .fluid-width-video-wrapper { */\n  .gatsby-resp-iframe-wrapper {\n    margin: 1.5em 0 3em;\n  }\n\n  hr {\n    margin: 4vw 0;\n  }\n\n  hr:after {\n    content: '';\n    position: absolute;\n    top: -15px;\n    left: 50%;\n    display: block;\n    margin-left: -10px;\n    width: 1px;\n    height: 30px;\n    /* background: color(var(--lightgrey) l(+10%)); */\n    background: ${lighten('0.1', colors.lightgrey)};\n    box-shadow: #fff 0 0 0 5px;\n    transform: rotate(45deg);\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    color: ${setLightness('0.05', colors.darkgrey)};\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell,\n      'Open Sans', 'Helvetica Neue', sans-serif;\n  }\n\n  h1 {\n    margin: 0.5em 0 0.2em 0;\n    font-size: 4.6rem;\n    font-weight: 700;\n  }\n  @media (max-width: 500px) {\n    h1 {\n      font-size: 2.8rem;\n    }\n  }\n\n  h2 {\n    margin: 0.5em 0 0.2em 0;\n    font-size: 3.6rem;\n    font-weight: 700;\n  }\n  @media (max-width: 500px) {\n    h2 {\n      font-size: 2.6rem;\n    }\n  }\n\n  h3 {\n    margin: 0.5em 0 0.2em 0;\n    font-size: 2.8rem;\n    font-weight: 700;\n  }\n  @media (max-width: 500px) {\n    h3 {\n      font-size: 2.2rem;\n    }\n  }\n\n  h4 {\n    margin: 0.5em 0 0.2em 0;\n    font-size: 2.8rem;\n    font-weight: 700;\n  }\n  @media (max-width: 500px) {\n    h4 {\n      font-size: 2.2rem;\n    }\n  }\n\n  h5 {\n    display: block;\n    margin: 0.5em 0;\n    padding: 1em 0 1.5em;\n    border: 0;\n    color: ${colors.blue};\n    font-family: Georgia, serif;\n    font-size: 3.2rem;\n    line-height: 1.35em;\n    text-align: center;\n  }\n  @media (min-width: 1180px) {\n    h5 {\n      max-width: 1060px;\n    }\n  }\n  @media (max-width: 500px) {\n    h5 {\n      padding: 0 0 0.5em;\n      font-size: 2.2rem;\n    }\n  }\n\n  h6 {\n    margin: 0.5em 0 0.2em 0;\n    font-size: 2.3rem;\n    font-weight: 700;\n  }\n  @media (max-width: 500px) {\n    h6 {\n      font-size: 2rem;\n    }\n  }\n\n  /* Tables */\n  table {\n    display: inline-block;\n    overflow-x: auto;\n    margin: 0.5em 0 2.5em;\n    max-width: 100%;\n    width: auto;\n    border-spacing: 0;\n    border-collapse: collapse;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell,\n      'Open Sans', 'Helvetica Neue', sans-serif;\n    font-size: 1.6rem;\n    white-space: nowrap;\n    vertical-align: top;\n  }\n\n  table {\n    -webkit-overflow-scrolling: touch;\n    background: radial-gradient(ellipse at left, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 75%) 0\n        center,\n      radial-gradient(ellipse at right, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 75%) 100% center;\n    background-attachment: scroll, scroll;\n    background-size: 10px 100%, 10px 100%;\n    background-repeat: no-repeat;\n  }\n\n  table td:first-child {\n    background-image: linear-gradient(\n      to right,\n      rgba(255, 255, 255, 1) 50%,\n      rgba(255, 255, 255, 0) 100%\n    );\n    background-size: 20px 100%;\n    background-repeat: no-repeat;\n  }\n\n  table td:last-child {\n    background-image: linear-gradient(\n      to left,\n      rgba(255, 255, 255, 1) 50%,\n      rgba(255, 255, 255, 0) 100%\n    );\n    background-position: 100% 0;\n    background-size: 20px 100%;\n    background-repeat: no-repeat;\n  }\n\n  table th {\n    color: ${colors.darkgrey};\n    font-size: 1.2rem;\n    font-weight: 700;\n    letter-spacing: 0.2px;\n    text-align: left;\n    text-transform: uppercase;\n    /* background-color: color(var(--whitegrey) l(+4%)); */\n    background-color: ${lighten('0.04', colors.whitegrey)};\n  }\n\n  table th,\n  table td {\n    padding: 6px 12px;\n    /* border: color(var(--whitegrey) l(-1%) s(-5%)) 1px solid; */\n    border: ${setSaturation('0.05', darken('0.01', colors.whitegrey))} 1px solid;\n  }\n\n  @media (max-width: 500px) {\n    padding: 0;\n    :before {\n      display: none;\n    }\n    :after {\n      display: none;\n    }\n  }\n`;\n\nconst renderAst = new rehypeReact({\n  createElement: React.createElement,\n  // components: { 'interactive-counter': Counter },\n  components: {},\n}).Compiler;\n\nconst Ast = ({ ast, ...props }: any) => {\n  ast.properties = props;\n  return renderAst(ast);\n};\n\nexport interface PostContentProps {\n  htmlAst: any;\n}\n\nconst PostContent: React.SFC<PostContentProps> = ({ htmlAst }) => {\n  return (\n    <PostFullContent className=\"post-full-content\">\n      {/* TODO: this will apply the class when rehype-react is published https://github.com/rhysd/rehype-react/pull/11 */}\n      <Ast className=\"post-content\" ast={htmlAst} />\n    </PostFullContent>\n  );\n};\n\nexport default PostContent;\n"],"sourceRoot":""}