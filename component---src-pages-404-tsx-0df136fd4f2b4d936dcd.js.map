{"version":3,"sources":["webpack:///./src/pages/404.tsx","webpack:///./src/styles/colors.ts","webpack:///./src/website-config.ts","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/styles/shared.ts","webpack:///./src/components/Wrapper.tsx","webpack:///./src/layouts/index.tsx","webpack:///./src/components/PostCard.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header/SiteNavLogo.tsx"],"names":["SiteNavCenter","styled","target","ErrorTemplate","css","ErrorCode","ErrorDescription","colors","midgrey","ErrorLink","NotFoundPage","props","edges","data","allMarkdownRemark","react__WEBPACK_IMPORTED_MODULE_2__","_layouts__WEBPACK_IMPORTED_MODULE_7__","_components_Wrapper__WEBPACK_IMPORTED_MODULE_6__","className","SiteHeader","outer","_components_header_SiteNavLogo__WEBPACK_IMPORTED_MODULE_4__","id","inner","style","textAlign","gatsby__WEBPACK_IMPORTED_MODULE_1__","to","PostFeed","map","_ref","node","_components_PostCard__WEBPACK_IMPORTED_MODULE_5__","key","fields","slug","post","pageQuery","__webpack_require__","d","__webpack_exports__","blue","green","purple","yellow","red","darkgrey","lightgrey","whitegrey","pink","brown","config","title","description","coverImage","logo","siteUrl","twitter","showSubscribe","mailchimpAction","mailchimpName","r","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","a","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","createElement","Consumer","staticQueryData","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","SiteMain","SiteTitle","SiteDescription","PostFeedRaise","SocialLink","SiteHeaderContent","AuthorProfileImage","emotion__WEBPACK_IMPORTED_MODULE_0__","react_emotion__WEBPACK_IMPORTED_MODULE_1__","_colors__WEBPACK_IMPORTED_MODULE_2__","polished__WEBPACK_IMPORTED_MODULE_3__","darken","lighten","StyledWrapper","Wrapper","polished__WEBPACK_IMPORTED_MODULE_1__","_styles_colors__WEBPACK_IMPORTED_MODULE_3__","injectGlobal","IndexLayout","gatsby__WEBPACK_IMPORTED_MODULE_0__","gatsby_image__WEBPACK_IMPORTED_MODULE_1__","gatsby_image__WEBPACK_IMPORTED_MODULE_1___default","polished__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_3__","react_emotion__WEBPACK_IMPORTED_MODULE_4__","_styles_colors__WEBPACK_IMPORTED_MODULE_5__","PostCardStyles","PostCardImageLink","PostCardImage","PostCardContent","PostCardContentLink","PostCardTags","PostCardTitle","PostCardExcerpt","PostCardMeta","ReadingTime","PostCard","frontmatter","image","childImageSharp","fluid","alt","height","tags","excerpt","timeToRead","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SiteNavLogoStyles","SiteNavLogo","gatsby__WEBPACK_IMPORTED_MODULE_2__","src","fixed","_public_static_d_1396328160_json__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"component---src-pages-404-tsx-0df136fd4f2b4d936dcd.js","sourcesContent":["import { graphql, Link } from 'gatsby';\nimport * as React from 'react';\nimport styled, { css } from 'react-emotion';\n\nimport SiteNavLogo from '../components/header/SiteNavLogo';\nimport PostCard from '../components/PostCard';\nimport Wrapper from '../components/Wrapper';\nimport IndexLayout from '../layouts';\nimport { colors } from '../styles/colors';\nimport { inner, outer, PostFeed, SiteHeader } from '../styles/shared';\nimport { PageContext } from '../templates/post';\n\nconst SiteNavCenter = styled.nav`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n\n  .site-nav-logo {\n    margin-right: 0;\n  }\n`;\n\nconst ErrorTemplate = css`\n  padding: 7vw 4vw;\n`;\n\nconst ErrorCode = styled.h1`\n  margin: 0;\n  font-size: 12vw;\n  line-height: 1em;\n  letter-spacing: -5px;\n  opacity: 0.3;\n`;\n\nconst ErrorDescription = styled.p`\n  margin: 0;\n  color: ${colors.midgrey};\n  font-size: 3rem;\n  line-height: 1.3em;\n  font-weight: 400;\n`;\n\nconst ErrorLink = css`\n  display: inline-block;\n  margin-top: 5px;\n`;\n\ninterface NotFoundTemplateProps {\n  data: {\n    allMarkdownRemark: {\n      totalCount: number;\n      edges: {\n        node: PageContext;\n      }[];\n    };\n  };\n}\n\nconst NotFoundPage: React.SFC<NotFoundTemplateProps> = props => {\n  const { edges } = props.data.allMarkdownRemark;\n\n  return (\n    <IndexLayout>\n      <Wrapper>\n        <header className={`${SiteHeader} ${outer}`}>\n          <div className=\"inner\">\n            <SiteNavCenter>\n              <SiteNavLogo />\n            </SiteNavCenter>\n          </div>\n        </header>\n        <main id=\"site-main\" className={`${ErrorTemplate} ${outer}`}>\n          <div className={`${inner}`}>\n            <section style={{ textAlign: 'center' }}>\n              <ErrorCode>404</ErrorCode>\n              <ErrorDescription>Page not found</ErrorDescription>\n              <Link className={`${ErrorLink}`} to={''}>\n                Go to the front page →\n              </Link>\n            </section>\n          </div>\n        </main>\n        <aside className={`${outer}`}>\n          <div className={`${inner}`}>\n            <div className={`${PostFeed}`}>\n              {edges.map(({ node }) => (\n                <PostCard key={node.fields.slug} post={node} />\n              ))}\n            </div>\n          </div>\n        </aside>\n      </Wrapper>\n    </IndexLayout>\n  );\n};\n\nexport default NotFoundPage;\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(limit: 3, sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          timeToRead\n          frontmatter {\n            title\n            date\n            tags\n            image {\n              childImageSharp {\n                fluid(maxWidth: 3720) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            author {\n              id\n              bio\n              avatar {\n                children {\n                  ... on ImageSharp {\n                    fixed(quality: 100) {\n                      src\n                    }\n                  }\n                }\n              }\n            }\n          }\n          excerpt\n          fields {\n            layout\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n","export const colors = {\n  blue: '#3eb0ef',\n  green: '#a4d037',\n  purple: '#ad26b4',\n  yellow: '#fecd35',\n  red: '#f05230',\n  darkgrey: '#15171A',\n  midgrey: '#738a94',\n  lightgrey: '#c5d2d9',\n  whitegrey: '#e5eff5',\n  pink: '#fa3a57',\n  brown: '#a3821a',\n}","export interface WebsiteConfig {\n  title: string;\n  description: string;\n  coverImage: string;\n  logo: string;\n  /**\n   * blog full path, no ending slash!\n   */\n  siteUrl: string;\n  facebook?: string;\n  twitter?: string;\n  /**\n   * hide or show all email subscribe boxes\n   */\n  showSubscribe: boolean;\n  /**\n   * create a list on mailchimp and then create an embeddable signup form. this is the form action\n   */\n  mailchimpAction?: string;\n  /**\n   * this is the hidden input field name\n   */\n  mailchimpName?: string;\n}\n\nconst config: WebsiteConfig = {\n  title: 'Anton Lavrenov Blog',\n  description: 'I help companies create graphical web-applications.',\n  coverImage: 'img/blog-cover.jpg',\n  logo: 'img/logo.png',\n  siteUrl: 'https://lavrton.com',\n  // facebook: 'https://www.facebook.com/ghost',\n  twitter: 'https://twitter.com/lavrton',\n  showSubscribe: false,\n  mailchimpAction:\n    'https://twitter.us19.list-manage.com/subscribe/post?u=a89b6987ac248c81b0b7f3a0f&amp;id=7d777b7d75',\n  mailchimpName: 'b_a89b6987ac248c81b0b7f3a0f_7d777b7d75',\n};\n\nexport default config;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import { css } from 'emotion';\nimport styled from 'react-emotion';\nimport { colors } from './colors';\nimport { darken, lighten } from 'polished';\n\nexport const outer = css`\n  position: relative;\n  padding: 0 4vw;\n`;\n\n// Centered content container blocks\nexport const inner = css`\n  margin: 0 auto;\n  max-width: 1040px;\n  width: 100%;\n`;\n\nexport const SiteMain = css`\n  z-index: 100;\n  flex-grow: 1;\n`;\n\nexport const SiteTitle = styled.h1`\n  z-index: 10;\n  margin: 0;\n  padding: 0;\n  font-size: 3.8rem;\n  font-weight: 700;\n`;\n\nexport const SiteDescription = styled.h2`\n  z-index: 10;\n  margin: 0;\n  padding: 5px 0;\n  font-size: 2.2rem;\n  font-weight: 300;\n  letter-spacing: 0.5px;\n  opacity: 0.8;\n`;\n\nexport const PostFeed = css`\n  position: relative;\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0 -20px;\n  padding: 40px 0 0 0;\n`;\n\nexport const PostFeedRaise = css`\n  @media (min-width: 900px) {\n    margin-top: -70px;\n    padding-top: 0;\n  }\n`;\n\nexport const SocialLink = css`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0;\n  padding: 10px;\n  color: #fff;\n  opacity: 0.8;\n\n  :hover {\n    opacity: 1;\n  }\n\n  svg {\n    height: 1.8rem;\n    fill: #fff;\n  }\n`;\n\nexport const SiteHeader = css`\n  position: relative;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  /* background: color(var(--darkgrey) l(-5%)) no-repeat center center; */\n  background: ${darken('0.05', colors.darkgrey)} no-repeat center center;\n  background-size: cover;\n`;\n\nexport const SiteHeaderContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 10vw 4vw;\n  min-height: 200px;\n  max-height: 450px;\n  text-align: center;\n`;\n\nexport const SiteHeaderStyles = css`\n  content: '';\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: auto;\n  left: 0;\n  z-index: 10;\n  display: block;\n  height: 80px;\n  background: linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0));\n\n  :before {\n    content: '';\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    z-index: 10;\n    display: block;\n    background: rgba(0, 0, 0, 0.18);\n  }\n\n  :after {\n    content: '';\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: auto;\n    left: 0;\n    z-index: 10;\n    display: block;\n    height: 80px;\n    background: linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0));\n  }\n  @media (max-width: 700px) {\n    padding-right: 0;\n    padding-left: 0;\n  }\n`;\n\nexport const AuthorProfileImage = css`\n  display: block;\n  /* background: color(var(--lightgrey) l(+10%)); */\n  background: ${lighten('0.1', colors.lightgrey)};\n  border-radius: 100%;\n  object-fit: cover;\n  margin-right: 15px;\n  width: 60px;\n  height: 60px;\n`;\n","import * as React from 'react';\nimport styled from 'react-emotion';\n\nconst StyledWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n`;\n\ninterface WrapperProps {\n  className?: string;\n}\n\nconst Wrapper: React.SFC<WrapperProps> = ({ children, className }) => (\n  <StyledWrapper className={className}>{children}</StyledWrapper>\n);\n\nexport default Wrapper;\n","import { injectGlobal } from 'emotion';\nimport { darken, lighten } from 'polished';\nimport * as React from 'react';\n\nimport { colors } from '../styles/colors';\n\n// tslint:disable-next-line:no-unused-expression\ninjectGlobal`\nhtml,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font: inherit;\n  font-size: 100%;\n  vertical-align: baseline;\n}\nbody {\n  line-height: 1;\n}\nol,\nul {\n  list-style: none;\n}\nblockquote,\nq {\n  quotes: none;\n}\nblockquote:before,\nblockquote:after,\nq:before,\nq:after {\n  content: \"\";\n  content: none;\n}\ntable {\n  border-spacing: 0;\n  border-collapse: collapse;\n}\nimg {\n  max-width: 100%;\n}\nhtml {\n  box-sizing: border-box;\n  font-family: sans-serif;\n\n  -ms-text-size-adjust: 100%;\n  -webkit-text-size-adjust: 100%;\n}\n*,\n*:before,\n*:after {\n  box-sizing: inherit;\n}\na {\n  background-color: transparent;\n}\na:active,\na:hover {\n  outline: 0;\n}\nb,\nstrong {\n  font-weight: bold;\n}\ni,\nem,\ndfn {\n  font-style: italic;\n}\nh1 {\n  margin: 0.67em 0;\n  font-size: 2em;\n}\nsmall {\n  font-size: 80%;\n}\nsub,\nsup {\n  position: relative;\n  font-size: 75%;\n  line-height: 0;\n  vertical-align: baseline;\n}\nsup {\n  top: -0.5em;\n}\nsub {\n  bottom: -0.25em;\n}\nimg {\n  border: 0;\n}\nsvg:not(:root) {\n  overflow: hidden;\n}\nmark {\n  background-color: #fdffb6;\n}\ncode,\nkbd,\npre,\nsamp {\n  font-family: monospace, monospace;\n  font-size: 1em;\n}\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  margin: 0; \n  color: inherit; \n  font: inherit; \n}\nbutton {\n  overflow: visible;\n  border: none;\n}\nbutton,\nselect {\n  text-transform: none;\n}\nbutton,\nhtml input[type=\"button\"],\n\ninput[type=\"reset\"],\ninput[type=\"submit\"] {\n  cursor: pointer; \n\n  -webkit-appearance: button; \n}\nbutton[disabled],\nhtml input[disabled] {\n  cursor: default;\n}\nbutton::-moz-focus-inner,\ninput::-moz-focus-inner {\n  padding: 0;\n  border: 0;\n}\ninput {\n  line-height: normal;\n}\ninput:focus {\n  outline: none;\n}\ninput[type=\"checkbox\"],\ninput[type=\"radio\"] {\n  box-sizing: border-box; \n  padding: 0; \n}\ninput[type=\"number\"]::-webkit-inner-spin-button,\ninput[type=\"number\"]::-webkit-outer-spin-button {\n  height: auto;\n}\ninput[type=\"search\"] {\n  box-sizing: content-box; \n\n  -webkit-appearance: textfield; \n}\ninput[type=\"search\"]::-webkit-search-cancel-button,\ninput[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\nlegend {\n  padding: 0; \n  border: 0; \n}\ntextarea {\n  overflow: auto;\n}\ntable {\n  border-spacing: 0;\n  border-collapse: collapse;\n}\ntd,\nth {\n  padding: 0;\n}\n\nhtml {\n  overflow-x: hidden;\n  overflow-y: scroll;\n  font-size: 62.5%;\n\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n}\nbody {\n  overflow-x: hidden;\n  /* color: color(var(--midgrey) l(-25%)); */\n  color: ${darken('0.25', colors.midgrey)};\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif;\n  font-size: 1.5rem;\n  line-height: 1.6em;\n  font-weight: 400;\n  font-style: normal;\n  letter-spacing: 0;\n  text-rendering: optimizeLegibility;\n  background: #fff;\n\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  -moz-font-feature-settings: \"liga\" on;\n}\n\n::selection {\n  text-shadow: none;\n  /* background: color(var(--blue) lightness(+30%)); */\n  background: ${lighten('0.3', colors.blue)};\n}\n\nhr {\n  position: relative;\n  display: block;\n  width: 100%;\n  margin: 2.5em 0 3.5em;\n  padding: 0;\n  height: 1px;\n  border: 0;\n  /* border-top: 1px solid color(var(--lightgrey) l(+10%)); */\n  border-top: 1px solid ${lighten('0.1', colors.lightgrey)};\n}\n\naudio,\ncanvas,\niframe,\nimg,\nsvg,\nvideo {\n  vertical-align: middle;\n}\n\nfieldset {\n  margin: 0;\n  padding: 0;\n  border: 0;\n}\n\ntextarea {\n  resize: vertical;\n}\n\np,\nul,\nol,\ndl,\nblockquote {\n  margin: 0 0 1.5em 0;\n}\n\nol,\nul {\n  padding-left: 1.3em;\n  padding-right: 1.5em;\n}\n\nol ol,\nul ul,\nul ol,\nol ul {\n  margin: 0.5em 0 1em;\n}\n\nul {\n  list-style: disc;\n}\n\nol {\n  list-style: decimal;\n}\n\nul,\nol {\n  max-width: 100%;\n}\n\nli {\n  margin: 0.5em 0;\n  padding-left: 0.3em;\n  line-height: 1.6em;\n}\n\ndt {\n  float: left;\n  margin: 0 20px 0 0;\n  width: 120px;\n  color: ${colors.darkgrey};\n  font-weight: 500;\n  text-align: right;\n}\n\ndd {\n  margin: 0 0 5px 0;\n  text-align: left;\n}\n\nblockquote {\n  margin: 1.5em 0;\n  padding: 0 1.6em 0 1.6em;\n  border-left: ${colors.whitegrey} 0.5em solid;\n}\n\nblockquote p {\n  margin: 0.8em 0;\n  font-size: 1.2em;\n  font-weight: 300;\n}\n\nblockquote small {\n  display: inline-block;\n  margin: 0.8em 0 0.8em 1.5em;\n  font-size: 0.9em;\n  opacity: 0.8;\n}\n\nblockquote small:before {\n  content: \"\\\\2014 \\\\00A0\";\n}\n\nblockquote cite {\n  font-weight: bold;\n}\nblockquote cite a {\n  font-weight: normal;\n}\n\na {\n  /* color: color(var(--blue) l(-5%)); */\n  color: ${darken('0.05', colors.blue)};\n  text-decoration: none;\n}\n\na:hover {\n  text-decoration: underline;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  margin-top: 0;\n  line-height: 1.15;\n  font-weight: 700;\n  text-rendering: optimizeLegibility;\n}\n\nh1 {\n  margin: 0 0 0.5em 0;\n  font-size: 5rem;\n  font-weight: 700;\n}\n@media (max-width: 500px) {\n  h1 {\n      font-size: 2.2rem;\n  }\n}\n\nh2 {\n  margin: 1.5em 0 0.5em 0;\n  font-size: 2rem;\n}\n@media (max-width: 500px) {\n  h2 {\n      font-size: 1.8rem;\n  }\n}\n\nh3 {\n  margin: 1.5em 0 0.5em 0;\n  font-size: 1.8rem;\n  font-weight: 500;\n}\n@media (max-width: 500px) {\n  h3 {\n      font-size: 1.7rem;\n  }\n}\n\nh4 {\n  margin: 1.5em 0 0.5em 0;\n  font-size: 1.6rem;\n  font-weight: 500;\n}\n\nh5 {\n  margin: 1.5em 0 0.5em 0;\n  font-size: 1.4rem;\n  font-weight: 500;\n}\n\nh6 {\n  margin: 1.5em 0 0.5em 0;\n  font-size: 1.4rem;\n  font-weight: 500;\n}\n\nbody {\n  background: #f4f8fb;\n}\n`;\n\ninterface IndexProps {\n  className?: string;\n}\n\nconst IndexLayout: React.SFC<IndexProps> = props => {\n  return <div className={props.className}>{props.children}</div>;\n};\n\nexport default IndexLayout;\n","import { Link } from 'gatsby';\nimport Img from 'gatsby-image';\nimport * as _ from 'lodash';\nimport { lighten } from 'polished';\nimport * as React from 'react';\n\nimport styled, { css } from 'react-emotion';\nimport { colors } from '../styles/colors';\nimport { PageContext } from '../templates/post';\n\nconst PostCardStyles = css`\n  flex: 1 1 300px;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  margin: 0 20px 40px;\n  min-height: 300px;\n  background: #fff center center;\n  background-size: cover;\n  border-radius: 5px;\n  box-shadow: rgba(39, 44, 49, 0.06) 8px 14px 38px, rgba(39, 44, 49, 0.03) 1px 3px 8px;\n  transition: all 0.5s ease;\n\n  :hover {\n    box-shadow: rgba(39, 44, 49, 0.07) 8px 28px 50px, rgba(39, 44, 49, 0.04) 1px 6px 12px;\n    transition: all 0.4s ease;\n    transform: translate3D(0, -1px, 0) scale(1.02);\n  }\n`;\n\nconst PostCardImageLink = css`\n  position: relative;\n  display: block;\n  overflow: hidden;\n  border-radius: 5px 5px 0 0;\n`;\n\nconst PostCardImage = styled.div`\n  width: auto;\n  height: 200px;\n  background: ${colors.lightgrey} no-repeat center center;\n  background-size: cover;\n`;\n\nconst PostCardContent = styled.div`\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nconst PostCardContentLink = css`\n  position: relative;\n  flex-grow: 1;\n  display: block;\n  padding: 25px 25px 0;\n  color: ${colors.darkgrey};\n\n  :hover {\n    text-decoration: none;\n  }\n`;\n\nconst PostCardTags = styled.span`\n  display: block;\n  margin-bottom: 4px;\n  color: ${colors.midgrey};\n  font-size: 1.2rem;\n  line-height: 1.15em;\n  font-weight: 500;\n  letter-spacing: 0.5px;\n  text-transform: uppercase;\n`;\n\nconst PostCardTitle = styled.h2`\n  margin-top: 0;\n`;\n\nconst PostCardExcerpt = styled.section`\n  font-family: Georgia, serif;\n`;\n\nconst PostCardMeta = styled.footer`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n  padding: 0 25px 25px;\n`;\n\nconst AuthorList = styled.ul`\n  display: flex;\n  flex-wrap: wrap-reverse;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`;\n\nconst AuthorListItem = styled.li`\n  position: relative;\n  flex-shrink: 0;\n  margin: 0;\n  padding: 0;\n\n  :nth-child(1) {\n    z-index: 10;\n  }\n  :nth-child(2) {\n    z-index: 9;\n  }\n  :nth-child(3) {\n    z-index: 8;\n  }\n  :nth-child(4) {\n    z-index: 7;\n  }\n  :nth-child(5) {\n    z-index: 6;\n  }\n  :nth-child(6) {\n    z-index: 5;\n  }\n  :nth-child(7) {\n    z-index: 4;\n  }\n  :nth-child(8) {\n    z-index: 3;\n  }\n  :nth-child(9) {\n    z-index: 2;\n  }\n  :nth-child(10) {\n    z-index: 1;\n  }\n  :hover .author-name-tooltip {\n    opacity: 1;\n    transform: translateY(0px);\n  }\n`;\n\nconst AuthorNameTooltip = styled.div`\n  position: absolute;\n  bottom: 105%;\n  z-index: 999;\n  display: block;\n  padding: 2px 8px;\n  color: white;\n  font-size: 1.2rem;\n  letter-spacing: 0.2px;\n  white-space: nowrap;\n  background: ${colors.darkgrey};\n  border-radius: 3px;\n  box-shadow: rgba(39, 44, 49, 0.08) 0 12px 26px, rgba(39, 44, 49, 0.03) 1px 3px 8px;\n  opacity: 0;\n  transition: all 0.3s cubic-bezier(0.4, 0.01, 0.165, 0.99);\n  transform: translateY(6px);\n  pointer-events: none;\n\n  @media (max-width: 650px) {\n    display: none;\n  }\n`;\n\nconst StaticAvatar = css`\n  display: block;\n  overflow: hidden;\n  margin: 0 -5px;\n  width: 34px;\n  height: 34px;\n  border: #fff 2px solid;\n  border-radius: 100%;\n`;\n\nconst AuthorProfileImage = styled.img`\n  display: block;\n  width: 100%;\n  height: 100%;\n  /* background: color(var(--lightgrey) l(+10%)); */\n  background: ${lighten('0.1', colors.lightgrey)}\n  border-radius: 100%;\n  object-fit: cover;\n`;\n\nconst ReadingTime = styled.span`\n  flex-shrink: 0;\n  margin-left: 20px;\n  color: ${colors.midgrey};\n  font-size: 1.2rem;\n  line-height: 33px;\n  font-weight: 500;\n  letter-spacing: 0.5px;\n  text-transform: uppercase;\n`;\n\nexport interface PostCardProps {\n  post: PageContext;\n}\n\nconst PostCard: React.SFC<PostCardProps> = ({ post }) => {\n  return (\n    <article className={`post-card ${PostCardStyles} ${!post.frontmatter.image ? 'no-image' : ''}`}>\n      {post.frontmatter.image && (\n        <Link className={`${PostCardImageLink} post-card-image-link`} to={post.fields.slug}>\n          <PostCardImage className=\"post-card-image\">\n            {post.frontmatter.image && post.frontmatter.image.childImageSharp.fluid && (\n              <Img\n                alt={`${post.frontmatter.title} cover image`}\n                style={{ height: '100%' }}\n                fluid={post.frontmatter.image.childImageSharp.fluid}\n              />\n            )}\n          </PostCardImage>\n        </Link>\n      )}\n      <PostCardContent className=\"post-card-content\">\n        <Link className={`${PostCardContentLink} post-card-content-link`} to={post.fields.slug}>\n          <header className=\"post-card-header\">\n            {post.frontmatter.tags && <PostCardTags>{post.frontmatter.tags[0]}</PostCardTags>}\n            <PostCardTitle>{post.frontmatter.title}</PostCardTitle>\n          </header>\n          <PostCardExcerpt>\n            <p>{post.excerpt}</p>\n          </PostCardExcerpt>\n        </Link>\n        <PostCardMeta className=\"post-card-meta\">\n          {/* <AuthorList>\n            <AuthorListItem>\n              <AuthorNameTooltip className=\"author-name-tooltip\">\n                {post.frontmatter.author.id}\n              </AuthorNameTooltip>\n              <Link\n                className={`${StaticAvatar}`}\n                to={`/author/${_.kebabCase(post.frontmatter.author.id)}/`}\n              >\n                <img\n                  className={`${AuthorProfileImage}`}\n                  src={post.frontmatter.author.avatar.children[0].fixed.src}\n                  alt={post.frontmatter.author.id}\n                />\n              </Link>\n            </AuthorListItem>\n          </AuthorList> */}\n          <ReadingTime>{post.timeToRead} min read</ReadingTime>\n        </PostCardMeta>\n      </PostCardContent>\n    </article>\n  );\n};\n\nexport default PostCard;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { graphql, Link, StaticQuery } from 'gatsby';\nimport * as React from 'react';\nimport { css } from 'react-emotion';\n\nimport config from '../../website-config';\n\nconst SiteNavLogoStyles = css`\n  flex-shrink: 0;\n  display: block;\n  margin-right: 24px;\n  padding: 11px 0;\n  color: #fff;\n  font-size: 1.7rem;\n  line-height: 1em;\n  font-weight: bold;\n  letter-spacing: -0.5px;\n\n  :hover {\n    text-decoration: none;\n  }\n\n  img {\n    display: block;\n    width: auto;\n    height: 21px;\n  }\n`;\n\ninterface SiteNavLogoProps {\n  logo?: {\n    childImageSharp: {\n      fixed: any;\n    };\n  };\n}\n\nconst SiteNavLogo = () => (\n  <StaticQuery\n    query={graphql`\n      query HeadingQuery {\n        logo: file(relativePath: { eq: \"img/logo.png\" }) {\n          childImageSharp {\n            fixed {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n      }\n    `}\n    // tslint:disable-next-line:react-this-binding-issue\n    render={(data: SiteNavLogoProps) => (\n      <Link className={`${SiteNavLogoStyles} site-nav-logo`} to=\"/\">\n        {data.logo ? (\n          <img src={data.logo.childImageSharp.fixed.src} alt={config.title} />\n        ) : (\n          config.title\n        )}\n      </Link>\n    )}\n  />\n);\n\nexport default SiteNavLogo;\n"],"sourceRoot":""}