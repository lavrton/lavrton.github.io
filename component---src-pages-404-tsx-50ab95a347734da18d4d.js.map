{"version":3,"sources":["webpack:///./src/pages/404.tsx"],"names":["SiteNavCenter","styled","ErrorTemplate","css","ErrorCode","ErrorDescription","colors","midgrey","ErrorLink","NotFoundPage","props","edges","data","allMarkdownRemark","className","SiteHeader","outer","id","inner","style","textAlign","to","PostFeed","map","node","key","fields","slug","post","pageQuery"],"mappings":"6FAAA,iKAYMA,EAAgBC,YAAH,0BAAGA,CAAH,4GAWbC,EAAgBC,YAAH,oBAIbC,EAAYH,YAAH,yBAAGA,CAAH,4EAQTI,EAAmBJ,YAAH,wBAAGA,CAAH,kBAEXK,IAAOC,QAFI,sDAQhBC,EAAYL,YAAH,wCAsDAM,UAtCwC,SAAAC,GAAS,IACtDC,EAAUD,EAAME,KAAKC,kBAArBF,MAER,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,KACE,0BAAQG,UAAcC,IAAL,IAAmBC,KAClC,uBAAKF,UAAU,SACb,gBAACd,EAAD,KACE,gBAAC,IAAD,SAIN,wBAAMiB,GAAG,YAAYH,UAAcZ,EAAL,IAAsBc,KAClD,uBAAKF,UAAS,GAAKI,KACjB,2BAASC,MAAO,CAAEC,UAAW,WAC3B,gBAAChB,EAAD,YACA,gBAACC,EAAD,uBACA,gBAAC,IAAD,CAAMS,UAAS,GAAKN,EAAaa,GAAI,IAArC,6BAMN,yBAAOP,UAAS,GAAKE,KACnB,uBAAKF,UAAS,GAAKI,KACjB,uBAAKJ,UAAS,GAAKQ,KAChBX,EAAMY,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACT,gBAAC,IAAD,CAAUC,IAAKD,EAAKE,OAAOC,KAAMC,KAAMJ,aAYhD,IAAMK,EAAY","file":"component---src-pages-404-tsx-50ab95a347734da18d4d.js","sourcesContent":["import { graphql, Link } from 'gatsby';\nimport * as React from 'react';\nimport styled, { css } from 'react-emotion';\n\nimport SiteNavLogo from '../components/header/SiteNavLogo';\nimport PostCard from '../components/PostCard';\nimport Wrapper from '../components/Wrapper';\nimport IndexLayout from '../layouts';\nimport { colors } from '../styles/colors';\nimport { inner, outer, PostFeed, SiteHeader } from '../styles/shared';\nimport { PageContext } from '../templates/post';\n\nconst SiteNavCenter = styled.nav`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n\n  .site-nav-logo {\n    margin-right: 0;\n  }\n`;\n\nconst ErrorTemplate = css`\n  padding: 7vw 4vw;\n`;\n\nconst ErrorCode = styled.h1`\n  margin: 0;\n  font-size: 12vw;\n  line-height: 1em;\n  letter-spacing: -5px;\n  opacity: 0.3;\n`;\n\nconst ErrorDescription = styled.p`\n  margin: 0;\n  color: ${colors.midgrey};\n  font-size: 3rem;\n  line-height: 1.3em;\n  font-weight: 400;\n`;\n\nconst ErrorLink = css`\n  display: inline-block;\n  margin-top: 5px;\n`;\n\ninterface NotFoundTemplateProps {\n  data: {\n    allMarkdownRemark: {\n      totalCount: number;\n      edges: {\n        node: PageContext;\n      }[];\n    };\n  };\n}\n\nconst NotFoundPage: React.SFC<NotFoundTemplateProps> = props => {\n  const { edges } = props.data.allMarkdownRemark;\n\n  return (\n    <IndexLayout>\n      <Wrapper>\n        <header className={`${SiteHeader} ${outer}`}>\n          <div className=\"inner\">\n            <SiteNavCenter>\n              <SiteNavLogo />\n            </SiteNavCenter>\n          </div>\n        </header>\n        <main id=\"site-main\" className={`${ErrorTemplate} ${outer}`}>\n          <div className={`${inner}`}>\n            <section style={{ textAlign: 'center' }}>\n              <ErrorCode>404</ErrorCode>\n              <ErrorDescription>Page not found</ErrorDescription>\n              <Link className={`${ErrorLink}`} to={''}>\n                Go to the front page â†’\n              </Link>\n            </section>\n          </div>\n        </main>\n        <aside className={`${outer}`}>\n          <div className={`${inner}`}>\n            <div className={`${PostFeed}`}>\n              {edges.map(({ node }) => (\n                <PostCard key={node.fields.slug} post={node} />\n              ))}\n            </div>\n          </div>\n        </aside>\n      </Wrapper>\n    </IndexLayout>\n  );\n};\n\nexport default NotFoundPage;\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(limit: 3, sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          timeToRead\n          frontmatter {\n            title\n            date\n            tags\n            image {\n              childImageSharp {\n                fluid(maxWidth: 3720) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            author {\n              id\n              bio\n              avatar {\n                children {\n                  ... on ImageSharp {\n                    fixed(quality: 100) {\n                      src\n                    }\n                  }\n                }\n              }\n            }\n          }\n          excerpt\n          fields {\n            layout\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}